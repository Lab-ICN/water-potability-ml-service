services:
  s3:
    restart: always
    image: minio/minio
    container_name: minio
    ports:
      - "443:443"
      - "9001:80"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_STORAGE_USE_HTTPS=True
      - MLFLOW_TRACKING_INSECURE_TLS=False
    volumes:
      - minio_data:/data
      - ./prebucket.sh:/usr/local/bin/prebucket.sh
      - ./certs:/root/.minio/certs
    entrypoint: /usr/local/bin/prebucket.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:443/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - water-potability

  db:
    restart: always
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=mlflow
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "5432", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - water-potability

  dbadmin:
    restart: always
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - water-potability

  tracker:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_URL=${DB_URL}
      - MLFLOW_S3_ENDPOINT_URL=${S3_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_BUCKET=${MLFLOW_BUCKET}
      - MLFLOW_TRACKING_USERNAME=${MLFLOW_ADMIN_USERNAME}
      - MLFLOW_TRACKING_PASSWORD=${MLFLOW_ADMIN_PASSWORD}
      - MLFLOW_S3_IGNORE_TLS=true
    volumes:
      - ./volumes/mlruns:/mlflow/mlruns
      - ./certs:/root/certs
    depends_on:
      - s3
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:5001"]
      interval: 30s
      retries: 3
      start_period: 10s
    networks:
      - water-potability

volumes:
  minio_data:

networks:
  water-potability: